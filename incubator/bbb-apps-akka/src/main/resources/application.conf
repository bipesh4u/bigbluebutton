akka {
  actor {
    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
    }
  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  
  rediscala-publish-worker-dispatcher {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 512
    }
    
  rediscala-subscriber-worker-dispatcher {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 512
    }
}

redis {
    host="127.0.0.1"
    port=6379
    password=""
    # recording keys should expire in 14 days
    keyExpiry=1209600
}

http {
  interface = "0.0.0.0"
  port = 9000
}

services {
  telizeHost = "www.telize.com"
  telizePort = 80
  bbbWebHost = "localhost"
  bbbWebPort = 88888
  bbbWebAPI = "http://192.168.23.44/bigbluebutton/api"
  sharedSecret = "a820d30da2db356124fce5bd5d8054b4"
  moderatorPassword = "mp"
  viewerPassword = "ap"
  defaultPresentationURL = "http://localhost/default.pdf"
  webCamService="rtmp://127.0.0.1/video"
  screenShareService="rtmp://127.0.0.1/screenshare"
}

red5 {
    deskshareip="192.168.0.109"
    deskshareapp="video-broadcast"
}
